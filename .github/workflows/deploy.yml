name: Deploy Laravel to GoDaddy

on:
  push:
    branches: [ main ]   # âœ… change from master to main

permissions:
  contents: write

concurrency:
  group: deploy-publish
  cancel-in-progress: true

env:
  APP_PATH: .   # your app is at repo root

jobs:
  deploy:
    name: Deploy to GoDaddy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP 8.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, bcmath, intl, dom, pdo, curl, tokenizer, xml, fileinfo, gd
          tools: composer

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Install Node.js and build assets (if package.json exists)
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: 20
        continue-on-error: true

      - name: Build frontend assets
        if: hashFiles('package.json') != ''
        run: |
          npm ci
          npm run build

      - name: Prepare deployment package
        run: |
          mkdir deploy
          rsync -av --exclude=".git" \
                    --exclude=".github" \
                    --exclude="node_modules" \
                    --exclude=".env" \
                    --exclude="storage/logs/*" \
                    --exclude="storage/framework/cache/*" \
                    ./ ./deploy/

          echo "Preflight auth check against $REPO_URL"
          git ls-remote "$REPO_URL" >/dev/null

          if git ls-remote --exit-code "$REPO_URL" refs/heads/deploy >/dev/null 2>&1; then
            git clone --depth=1 --branch=deploy "$REPO_URL" deploy-repo
          else
            git clone --depth=1 "$REPO_URL" deploy-repo
            cd deploy-repo
            git checkout --orphan deploy
            git rm -rf .
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git commit --allow-empty -m "Initialize deploy branch"
            git push -v "$REPO_URL" HEAD:refs/heads/deploy
            cd ..
          fi

          cd deploy-repo
          git fetch origin deploy
          git checkout deploy
          git reset --hard origin/deploy

          cd ..
          rsync -a --delete dist/ deploy-repo/

          cd deploy-repo
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -A

          if git diff --cached --quiet; then
            echo "No changes to deploy."
            exit 0
          fi

          git commit -m "Deploy from ${GITHUB_SHA}"
          git fetch origin deploy
          git rebase origin/deploy
          git push -v "$REPO_URL" HEAD:refs/heads/deploy

